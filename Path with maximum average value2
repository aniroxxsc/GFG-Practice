#include<iostream>
using namespace std;

const int M = 100;

double solve(int *arr, int n){
    int cost[n][n];
    cost[0][0] = *arr;
    for(int i=1;i<n;i++){
        cost[i][0] = cost[i-1][0] + *(arr+((i)*n)+0);
    }
    for(int j=1;j<n;j++){
        cost[0][j] = cost[0][j-1] + *(arr+(0*n)+j);
    }
    for(int i=1;i<n;i++){
        for(int j=1;j<n;j++){
            cost[i][j] = max(cost[i-1][j], cost[i][j-1]) + *(arr+(i*n)+j);
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cout<<cost[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<(double)cost[n-1][n-1]/(2*n-1)<<" "<<cost[n-1][n-1]<<" "<<2*n-1<<endl;
    return (double)cost[n-1][n-1]/(2*n-1);
}

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int arr[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                cin>>arr[i][j];
            }
        }
        cout<<solve(*arr, n )<<"hi"<<endl;
    }
    return 0;
}
