#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;

double solve(int* arr, int n){
    int dp[n][n];
    memset(dp,0,sizeof(dp));

    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(i==0 && j==0){
                dp[i][j]= *(arr);
                cout<<dp[i][j]<<" ";
            }
            else if(i==0){
                dp[i][j] = dp[i][j-1] + *(arr+i*n+j);
                cout<<dp[i][j]<<" ";
            }
            else if(j==0){
                dp[i][j] = dp[i-1][j] + *(arr+i*n+j);
                cout<<dp[i][j]<<" ";
            }
            else {
                dp[i][j] = max(dp[i-1][j],dp[i][j-1]) + *(arr+i*n+j);
                cout<<dp[i][j]<<" ";
            }
        }
        cout<<endl;
    }
    double b = (double)dp[n-1][n-1]/(2*n-1);
    return b;
}

int main(){
    int n;
    cin>>n;
    int arr[n][n];
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>arr[i][j];
        }
    }
    cout<<solve(*arr,n)<<endl;
    return 0;
}
